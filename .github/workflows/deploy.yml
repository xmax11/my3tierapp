name: CI/CD to DockerHub and EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 1: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Build and push frontend image
      - name: Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/3-tier-app-frontend:latest

      # Step 4: Build and push backend image
      - name: Build & Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/3-tier-app-backend:latest

      # Step 5: Optional - push MySQL if you customized it
      # - name: Build & Push Database
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: ./database
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/3-tier-app-db:latest

      # Step 6: Deploy to EC2
      - name: Deploy new containers to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          echo "$PRIVATE_KEY" > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST << 'EOF'
            echo "Pulling latest images..."
            docker pull $DOCKERHUB_USERNAME/3-tier-app-frontend:latest
            docker pull $DOCKERHUB_USERNAME/3-tier-app-backend:latest
            
            echo "Recreating containers..."
            docker stop frontend_app backend_app || true
            docker rm frontend_app backend_app || true
            
            docker run -d --name backend_app -p 3000:3000 $DOCKERHUB_USERNAME/3-tier-app-backend:latest
            docker run -d --name frontend_app -p 80:80 $DOCKERHUB_USERNAME/3-tier-app-frontend:latest

            echo "Deployment complete."
          EOF